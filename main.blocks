<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="KIND_SpriteKind" id="+l^a[tyT}s$Jt;~0_j|I">PowerUp</variable><variable type="KIND_SpriteKind" id="SHX4O0aIwD.H@a;dLB^c">HealthBar</variable></variables><block type="pxt-on-start" id="5D3m;EMG9cks9]2zY24E" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="ZR!5/^~gEOju-T9wY!,@" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class SpriteWithHealth" line1="{" line2="    sprite: Sprite" line3="    healthBar: HealthBar" line4="    currentHealth: number" line5="    maxHealth: number" line6="    constructor(img: Image, kind: number, maxHealth: number, currentHealth: number)" line7="    {" line8="        this.sprite = sprites.create(img, kind)" line9="        this.healthBar = new HealthBar(maxHealth, currentHealth)" line10="        this.maxHealth = maxHealth" line11="        this.currentHealth = currentHealth" line12="        this.sprite.setStayInScreen(true)" line13="    }" line14="    drawHealthBar()" line15="    {" line16="        this.healthBar.draw(this.sprite.x, this.sprite.y, this.sprite.image.height)" line17="    }" line18="    getHealth()" line19="    {" line20="        return this.currentHealth" line21="    }" line22="    changeHealth(amount: number)" line23="    {" line24="        this.currentHealth = Math.clamp(0, this.maxHealth, this.currentHealth - amount)" line25="        return this.getHealth()" line26="    }" line27="}" numlines="28"></mutation><next><block type="typescript_statement" id="f[P)Ivj|S}C_Vp!`]@j|" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class PlayerSprite extends SpriteWithHealth" line1="{" line2="    constructor(img: Image, maxHealth: number, currentHealth: number)" line3="    {" line4="        super(img, SpriteKind.Player, maxHealth, currentHealth)" line5="        controller.moveSprite(this.sprite, 70, 70)" line6="        scene.cameraFollowSprite(this.sprite)" line7="    }" line8="}" numlines="9"></mutation><next><block type="typescript_statement" id="hJ+W+0e6HyLioo5=B8/v" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class HealthBar" line1="{" line2="    max: number" line3="    current: number" line4="    healthBar: Sprite" line5="    constructor(maxHealth: number, currentHealth: number)" line6="    {" line7="        this.healthBar = sprites.create(image.create(20, 4), SpriteKind.HealthBar)" line8="        this.max = maxHealth" line9="        this.current = currentHealth" line10="    }" line11="    draw(x: number, y: number, imgHeight: number)" line12="    {" line13="        let barImg = this.healthBar.image" line14="        this.healthBar.setPosition(x, y + (imgHeight / 1.25))" line15="        barImg.drawRect(1, 1, this.healthBar.width - 2, 2, 2)" line16="        barImg.drawRect(1, 1, (this.healthBar.width - 2) * (this.current / this.max), 2, 7)" line17="        barImg.drawRect(0, 0, this.healthBar.width, this.healthBar.height, 12)" line18="    }" line19="    updateHealth(newHealth: number)" line20="    {" line21="        this.current = newHealth" line22="    }" line23="}" numlines="24"></mutation><next><block type="typescript_statement" id="~}C6k{^xfZ+vYPLJ]d}2" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class PowerUp" line1="{" line2="    powerUpKinds = [assets.image``]" line3="    sprite: Sprite" line4="    kind: number" line5="    constructor(kind: number)" line6="    {" line7="        this.kind = kind" line8="        this.sprite = sprites.create(this.powerUpKinds[kind], SpriteKind.PowerUp)" line9="    }" line10="    handleOverlapped(player: SpriteWithHealth)" line11="    {" line12="        // TODO: Implement powerup" line13="    }" line14="}" numlines="15"></mutation><next><block type="typescript_statement" id=";%?NtCQ:1uW=i1!~oK]?" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="scene.setTileMapLevel(assets.tilemap`forestLevel`)" numlines="1"></mutation><next><block type="gamesetbackgroundcolor" id="*Hk9G7QL#n/7LG3o9):9"><value name="color"><shadow type="colorindexpicker" id="dRY6Tg^OoJW$=3k=@39,"><field name="index">3</field></shadow></value><next><block type="typescript_statement" id="4K[tbYTK$Zfy)#V2!=}W" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let player = new PlayerSprite(assets.image`heroWalkFront1`, 100, 100)" numlines="1" declaredvars="player"></mutation><next><block type="typescript_statement" id="J+=,Gscrf_#|3m[+9~yo" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="tiles.tileAtLocationIsWall(tiles.getTileLocation(0, 0))" numlines="1"></mutation><next><block type="typescript_statement" id="(OW5nETO+a}W;4bVS)MU" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="tiles.tileAtLocationEquals(tiles.getTileLocation(0, 0), assets.tile`tileGrass1`)" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="gameupdate" id="i5f!J$s0zy?QWrfkZZM/" x="898" y="20"><comment pinned="false" h="80" w="160">Game loop. Needed to draw health bars</comment><statement name="HANDLER"><block type="typescript_statement" id="^I9#EexS8FlCp@e)kY6N" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="player.drawHealthBar()" numlines="1"></mutation></block></statement></block></xml>